Serio Siles Solano B66851

Tarea 2

Capitulo 2

    1  Nombres de clases :
        Incorrecto:
        public class Insertar {
            ...
        }
    
        tip: las clases deben nombrarse con un sustantivo, no se utilizan verbos.
        Correcto:
        public class Cliente {
            ...
        }

    2 Nombres de métodos :
        Incorrecto:
        public void empleado(String id){
            ...
        }

        tip: los nombres de los metodos deben ser verbos.
        Correcto:
        public void consultarEmpleado(String idEmpleado){
            ...
        }

    3 Nombres con sentido :
        Incorrecto:
        private String nombre; 

        tip: los nombres deben tener sentido y significado.
        Correcto:
        private String nombreEmpleado; 
 
    4  Evitar la desinformación :
        Incorrecto:
            private String total; 
            private String totalF; 

        tip: Evite usar nombres con variaciones.
        Correcto:
            private String subTotal; 
            private String totalFinal; 

    5 Evitar codificaciones :
        Incorrecto:
            private String nombreStr;
        tip: Evite usar prefijos que se añaden a las variables y que indican su tipo.
        Correcto:
            private String nombreCliente;

Capitulo 3
    
    1 Argumentos de salida:
        tip: evitar usarlos, en POO se utiliza el return que soluciona este problema.
        Correcto:
            public int suma(int primerNumero, int segundoNumero) {
                ...
                return resultado;
            }
    
    2 Excepciones :
        tip: es mejor utilizar las excepciones que usar la clase error.java 
        Correcto:
        public void leerFichero() throws IOException, FileNotFoundException {
            ...
        }
        
    3 Extraer bloques try y catch :
        tip: es mejor que los metodos tengan solo un try y catch. 
        Correcto:
        public void consultarEmpleado(int identificacionEmpleado){
            try {
                ...
            }
            catch (Exception e) {
                ...
            }
        }

    4 El procesamiento de errores es una cosa :
        tip: cuando función procesa errores, solo debe hacer eso, nada fuera de los try y catch.
        Incorrecto:
            public void insertarEmpleado(int identificacionEmpleado,String nombreEmpleado){
                try {
                    ...
                }
                catch (Exception e) {
                    ...
                }
                pagos.añadirEmpleado(int identificacionEmpleado);
            }

    5 Formas monádicas habituales :
        tip: existen motivos para pasar solo un argumento a una función.
        Correcto:
            public boolean existeEmpleado(String identificacionEmpleado){
                ...
            }
